#!/bin/bash
# OpenWrt Êèí‰ª∂ÈõÜÊàêËÑöÊú¨ - ÂÆåÊï¥Â¢ûÂº∫Áâà
# ÂåÖÂê´ÔºöDTSËÆæÂ§áÊ†ë„ÄÅÁΩëÁªúÈÖçÁΩÆ„ÄÅÊèí‰ª∂ÈõÜÊàê„ÄÅÈ™åËØÅÁ≠âÂÆåÊï¥ÂäüËÉΩ

set -eo pipefail
export PS4='+ [${BASH_SOURCE##*/}:${LINENO}] '

# -------------------- Êó•ÂøóÂáΩÊï∞ --------------------
log_step() { echo -e "\n[$(date +'%H:%M:%S')] \033[1;36müìù Ê≠•È™§Ôºö$*\033[0m"; }
log_info() { echo -e "[$(date +'%H:%M:%S')] \033[34m‚ÑπÔ∏è  $*\033[0m"; }
log_error() { echo -e "[$(date +'%H:%M:%S')] \033[31m‚ùå $*\033[0m" >&2; }
log_success() { echo -e "[$(date +'%H:%M:%S')] \033[32m‚úÖ $*\033[0m"; }
log_warning() { echo -e "[$(date +'%H:%M:%S')] \033[33m‚ö†Ô∏è  $*\033[0m" >&2; }
log_debug() { echo -e "[$(date +'%H:%M:%S')] \033[90müêõ $*\033[0m"; }

# -------------------- ÂÖ®Â±ÄÂèòÈáè --------------------
validation_passed=true
plugin_count=0
CONFIG_FILE=".config"
CUSTOM_PLUGINS_DIR="package/custom"
DEBUG_MODE=${DEBUG_MODE:-"true"}

# -------------------- DTSÈÖçÁΩÆÂèòÈáèÔºà‰ΩøÁî®ÊÇ®Êèê‰æõÁöÑÂÆåÊï¥ÈÖçÁΩÆÔºâ--------------------
ARCH="armv7"
DTS_DIR="target/linux/ipq40xx/files/arch/arm/boot/dts"
DTS_FILE="$DTS_DIR/qcom-ipq4019-cm520-79f.dts"
GENERIC_MK="target/linux/ipq40xx/image/generic.mk"
ADGUARD_CORE_DIR="package/base-files/files/usr/bin"

# -------------------- ÁΩëÁªúÂü∫Á°ÄÈÖçÁΩÆ --------------------
NETWORK_BASE_CONFIGS=(
    # IPQ40xxÊ†∏ÂøÉÈ©±Âä®
    "CONFIG_PACKAGE_kmod-qca-nss-dp=y"
    "CONFIG_PACKAGE_kmod-qca-ssdk=y"
    "CONFIG_PACKAGE_kmod-mii=y"
    "CONFIG_PACKAGE_kmod-phy-qcom-ipq4019=y"
    
    # ‰ª•Â§™ÁΩëÊîØÊåÅ
    "CONFIG_PACKAGE_kmod-of-mdio=y"
    "CONFIG_PACKAGE_kmod-mdio-gpio=y"
    "CONFIG_PACKAGE_kmod-fixed-phy=y"
    
    # DHCPÂÆ¢Êà∑Á´Ø
    "CONFIG_BUSYBOX_CONFIG_UDHCPC=y"
    "CONFIG_PACKAGE_udhcpc=y"
    "CONFIG_BUSYBOX_CONFIG_UDHCP_DEBUG=y"
    
    # ÁΩëÁªúÂ∑•ÂÖ∑
    "CONFIG_PACKAGE_tcpdump=y"
    "CONFIG_PACKAGE_traceroute=y"
    "CONFIG_PACKAGE_netstat=y"
    "CONFIG_PACKAGE_ss=y"
    "CONFIG_PACKAGE_ping=y"
    "CONFIG_PACKAGE_wget=y"
    
    # NATÂíåÈò≤ÁÅ´Â¢ô
    "CONFIG_PACKAGE_iptables-mod-nat-extra=y"
    "CONFIG_PACKAGE_kmod-nf-nathelper-extra=y"
    "CONFIG_PACKAGE_kmod-ipt-offload=y"
    
    # WiFiÊîØÊåÅ
    "CONFIG_PACKAGE_kmod-ath10k=y"
    "CONFIG_ATH10K_LEDS=y"
    "CONFIG_PACKAGE_ath10k-firmware-qca4019=y"
    
    # Á≥ªÁªüÂ∑•ÂÖ∑
    "CONFIG_PACKAGE_htop=y"
    "CONFIG_PACKAGE_nano=y"
    "CONFIG_PACKAGE_bash=y"
)

# -------------------- DTSÈÖçÁΩÆÂáΩÊï∞Ôºà‰ΩøÁî®ÊÇ®Êèê‰æõÁöÑÂÆåÊï¥ÈÖçÁΩÆÔºâ--------------------
setup_device_tree() {
    log_step "ÈÖçÁΩÆCM520-79FËÆæÂ§áÊ†ëÊîØÊåÅ"
    
    # -------------------- Ê≠•È©ü 1ÔºöÂü∫Á§éËÆäÈáèÂÆöÁæ© --------------------
    log_info "Ê≠•È©ü 1ÔºöÂÆöÁæ©Âü∫Á§éËÆäÈáè..."
    mkdir -p "$DTS_DIR" "$CUSTOM_PLUGINS_DIR" "$ADGUARD_CORE_DIR"
    log_success "Âü∫Á§éËÆäÈáèÂÆöÁæ©ÂÆåÊàê„ÄÇ"

    # -------------------- Ê≠•È©ü 2ÔºöÂâµÂª∫ÂøÖË¶ÅÁöÑÁõÆÈåÑ --------------------
    log_info "Ê≠•È©ü 2ÔºöÂâµÂª∫ÂøÖË¶ÅÁöÑÁõÆÈåÑ..."
    mkdir -p "$DTS_DIR" "$CUSTOM_PLUGINS_DIR" "$ADGUARD_CORE_DIR"
    log_success "ÁõÆÈåÑÂâµÂª∫ÂÆåÊàê„ÄÇ"

    # -------------------- Ê≠•È©ü 3ÔºöÂØ´ÂÖ•DTSÊñá‰ª∂ --------------------
    log_info "Ê≠•È©ü 3ÔºöÊ≠£Âú®ÂØ´ÂÖ•100%Ê≠£Á¢∫ÁöÑDTSÊñá‰ª∂..."
    cat > "$DTS_FILE" <<'EOF'
/dts-v1/;
// SPDX-License-Identifier: GPL-2.0-or-later OR MIT

#include "qcom-ipq4019.dtsi"
#include <dt-bindings/gpio/gpio.h>
#include <dt-bindings/input/input.h>
#include <dt-bindings/soc/qcom,tcsr.h>

/ {
	model = "MobiPromo CM520-79F";
	compatible = "mobipromo,cm520-79f";

	aliases {
		led-boot = &led_sys;
		led-failsafe = &led_sys;
		led-running = &led_sys;
		led-upgrade = &led_sys;
	};

	chosen {
		bootargs-append = " ubi.block=0,1 root=/dev/ubiblock0_1";
	};

	soc {
		rng@22000 {
			status = "okay";
		};
		mdio@90000 {
			status = "okay";
			pinctrl-0 = <&mdio_pins>;
			pinctrl-names = "default";
			reset-gpios = <&tlmm 47 GPIO_ACTIVE_LOW>;
			reset-delay-us = <1000>;
		};
		ess-psgmii@98000 {
			status = "okay";
		};
		tcsr@1949000 {
			compatible = "qcom,tcsr";
			reg = <0x1949000 0x100>;
			qcom,wifi_glb_cfg = <TCSR_WIFI_GLB_CFG>;
		};
		tcsr@194b000 {
			compatible = "qcom,tcsr";
			reg = <0x194b000 0x100>;
			qcom,usb-hsphy-mode-select = <TCSR_USB_HSPHY_HOST_MODE>;
		};
		ess_tcsr@1953000 {
			compatible = "qcom,tcsr";
			reg = <0x1953000 0x1000>;
			qcom,ess-interface-select = <TCSR_ESS_PSGMII>;
		};
		tcsr@1957000 {
			compatible = "qcom,tcsr";
			reg = <0x1957000 0x100>;
			qcom,wifi_noc_memtype_m0_m2 = <TCSR_WIFI_NOC_MEMTYPE_M0_M2>;
		};
		usb2@60f8800 {
			status = "okay";
			dwc3@6000000 {
				#address-cells = <1>;
				#size-cells = <0>;
				usb2_port1: port@1 {
					reg = <1>;
					#trigger-source-cells = <0>;
				};
			};
		};
		usb3@8af8800 {
			status = "okay";
			dwc3@8a00000 {
				#address-cells = <1>;
				#size-cells = <0>;
				usb3_port1: port@1 {
					reg = <1>;
					#trigger-source-cells = <0>;
				};
				usb3_port2: port@2 {
					reg = <2>;
					#trigger-source-cells = <0>;
				};
			};
		};
		crypto@8e3a000 {
			status = "okay";
		};
		watchdog@b017000 {
			status = "okay";
		};
		ess-switch@c000000 {
			status = "okay";
		};
		edma@c080000 {
			status = "okay";
		};
	};

	led_spi {
		compatible = "spi-gpio";
		#address-cells = <1>;
		#size-cells = <0>;
		sck-gpios = <&tlmm 40 GPIO_ACTIVE_HIGH>;
		mosi-gpios = <&tlmm 36 GPIO_ACTIVE_HIGH>;
		num-chipselects = <0>;
		led_gpio: led_gpio@0 {
			compatible = "fairchild,74hc595";
			reg = <0>;
			gpio-controller;
			#gpio-cells = <2>;
			registers-number = <1>;
			spi-max-frequency = <1000000>;
		};
	};

	leds {
		compatible = "gpio-leds";
		usb {
			label = "blue:usb";
			gpios = <&tlmm 10 GPIO_ACTIVE_HIGH>;
			linux,default-trigger = "usbport";
			trigger-sources = <&usb3_port1>, <&usb3_port2>, <&usb2_port1>;
		};
		led_sys: can {
			label = "blue:can";
			gpios = <&tlmm 11 GPIO_ACTIVE_HIGH>;
		};
		wan {
			label = "blue:wan";
			gpios = <&led_gpio 0 GPIO_ACTIVE_LOW>;
		};
		lan1 {
			label = "blue:lan1";
			gpios = <&led_gpio 1 GPIO_ACTIVE_LOW>;
		};
		lan2 {
			label = "blue:lan2";
			gpios = <&led_gpio 2 GPIO_ACTIVE_LOW>;
		};
		wlan2g {
			label = "blue:wlan2g";
			gpios = <&led_gpio 5 GPIO_ACTIVE_LOW>;
			linux,default-trigger = "phy0tpt";
		};
		wlan5g {
			label = "blue:wlan5g";
			gpios = <&led_gpio 6 GPIO_ACTIVE_LOW>;
			linux,default-trigger = "phy1tpt";
		};
	};

	keys {
		compatible = "gpio-keys";
		reset {
			label = "reset";
			gpios = <&tlmm 18 GPIO_ACTIVE_LOW>;
			linux,code = <KEY_RESTART>;
		};
	};
};

&blsp_dma { status = "okay"; };
&blsp1_uart1 { status = "okay"; };
&blsp1_uart2 { status = "okay"; };
&cryptobam { status = "okay"; };

&gmac0 {
	status = "okay";
	nvmem-cells = <&macaddr_art_1006>;
	nvmem-cell-names = "mac-address";
};

&gmac1 {
	status = "okay";
	nvmem-cells = <&macaddr_art_5006>;
	nvmem-cell-names = "mac-address";
};

&nand {
	pinctrl-0 = <&nand_pins>;
	pinctrl-names = "default";
	status = "okay";
	nand@0 {
		partitions {
			compatible = "fixed-partitions";
			#address-cells = <1>;
			#size-cells = <1>;
			partition@0 {
				label = "Bootloader";
				reg = <0x0 0xb00000>;
				read-only;
			};
			art: partition@b00000 {
				label = "ART";
				reg = <0xb00000 0x80000>;
				read-only;
				compatible = "nvmem-cells";
				#address-cells = <1>;
				#size-cells = <1>;
				precal_art_1000: precal@1000 { reg = <0x1000 0x2f20>; };
				macaddr_art_1006: macaddr@1006 { reg = <0x1006 0x6>; };
				precal_art_5000: precal@5000 { reg = <0x5000 0x2f20>; };
				macaddr_art_5006: macaddr@5006 { reg = <0x5006 0x6>; };
			};
			partition@b80000 {
				label = "rootfs";
				reg = <0xb80000 0x7480000>;
			};
		};
	};
};

&qpic_bam { status = "okay"; };

&tlmm {
	mdio_pins: mdio_pinmux {
		mux_1 {
			pins = "gpio6";
			function = "mdio";
			bias-pull-up;
		};
		mux_2 {
			pins = "gpio7";
			function = "mdc";
			bias-pull-up;
		};
	};
	nand_pins: nand_pins {
		pullups {
			pins = "gpio52", "gpio53", "gpio58", "gpio59";
			function = "qpic";
			bias-pull-up;
		};
		pulldowns {
			pins = "gpio54", "gpio55", "gpio56", "gpio57", "gpio60", "gpio61", "gpio62", "gpio63", "gpio64", "gpio65", "gpio66", "gpio67", "gpio68", "gpio69";
			function = "qpic";
			bias-pull-down;
		};
	};
};

&usb3_ss_phy { status = "okay"; };
&usb3_hs_phy { status = "okay"; };
&usb2_hs_phy { status = "okay"; };
&wifi0 { status = "okay"; nvmem-cell-names = "pre-calibration"; nvmem-cells = <&precal_art_1000>; qcom,ath10k-calibration-variant = "CM520-79F"; };
&wifi1 { status = "okay"; nvmem-cell-names = "pre-calibration"; nvmem-cells = <&precal_art_5000>; qcom,ath10k-calibration-variant = "CM520-79F"; };
EOF
    log_success "DTSÊñá‰ª∂ÂØ´ÂÖ•ÊàêÂäü„ÄÇ"

    # -------------------- Ê≠•È©ü 4ÔºöÂâµÂª∫Á∂≤Áµ°ÈÖçÁΩÆÊñá‰ª∂ --------------------
    log_info "Ê≠•È©ü 4ÔºöÂâµÂª∫ÈáùÂ∞ç CM520-79F ÁöÑÁ∂≤Áµ°ÈÖçÁΩÆÊñá‰ª∂..."
    BOARD_DIR="target/linux/ipq40xx/base-files/etc/board.d"
    mkdir -p "$BOARD_DIR"
    cat > "$BOARD_DIR/02_network" <<EOF
#!/bin/sh
. /lib/functions/system.sh
ipq40xx_board_detect() {
	local machine
	machine=\$(board_name)
	case "\$machine" in
	"mobipromo,cm520-79f")
		ucidef_set_interfaces_lan_wan "eth1" "eth0"
		;;
	esac
}
boot_hook_add preinit_main ipq40xx_board_detect
EOF
    chmod +x "$BOARD_DIR/02_network"
    log_success "Á∂≤Áµ°ÈÖçÁΩÆÊñá‰ª∂ÂâµÂª∫ÂÆåÊàê„ÄÇ"

    # -------------------- Ê≠•È©ü 5ÔºöÈÖçÁΩÆË®≠ÂÇôË¶èÂâá --------------------
    log_info "Ê≠•È©ü 5ÔºöÈÖçÁΩÆË®≠ÂÇôË¶èÂâá..."
    if ! grep -q "define Device/mobipromo_cm520-79f" "$GENERIC_MK"; then
        cat <<EOF >> "$GENERIC_MK"

define Device/mobipromo_cm520-79f
  DEVICE_VENDOR := MobiPromo
  DEVICE_MODEL := CM520-79F
  DEVICE_DTS := qcom-ipq4019-cm520-79f
  KERNEL_SIZE := 4096k
  ROOTFS_SIZE := 16384k
  IMAGE_SIZE := 81920k
  IMAGE/trx := append-kernel | pad-to \$(KERNEL_SIZE) | append-rootfs | trx -o \$@
endef
TARGET_DEVICES += mobipromo_cm520-79f
EOF
        log_success "ËÆæÂ§áËßÑÂàôÊ∑ªÂä†ÂÆåÊàê„ÄÇ"
    else
        sed -i 's/IMAGE_SIZE := 32768k/IMAGE_SIZE := 81920k/' "$GENERIC_MK"
        log_info "ËÆæÂ§áËßÑÂàôÂ∑≤Â≠òÂú®ÔºåÊõ¥Êñ∞IMAGE_SIZE„ÄÇ"
    fi
    
    return 0
}

# -------------------- Êô∫ËÉΩÈÖçÁΩÆÊ∑ªÂä†ÂáΩÊï∞ --------------------
add_config_if_missing() {
    local config="$1"
    local description="$2"
    
    if [ -z "$config" ]; then
        log_warning "ÈÖçÁΩÆÈ°π‰∏∫Á©∫ÔºåË∑≥Ëøá"
        return 1
    fi
    
    # Ê£ÄÊü•ÈÖçÁΩÆÊòØÂê¶Â∑≤Â≠òÂú®
    if grep -q "^${config}$" "$CONFIG_FILE" 2>/dev/null; then
        log_debug "ÈÖçÁΩÆÂ∑≤Â≠òÂú®: $config"
        return 0
    fi
    
    # Ê∑ªÂä†ÈÖçÁΩÆ
    echo "$config" >> "$CONFIG_FILE"
    if [ $? -eq 0 ]; then
        log_info "Ê∑ªÂä†ÈÖçÁΩÆ: $config"
        [ -n "$description" ] && log_debug "  ËØ¥Êòé: $description"
        return 0
    else
        log_error "Êó†Ê≥ïÊ∑ªÂä†ÈÖçÁΩÆ: $config"
        return 1
    fi
}

# -------------------- Ê∑ªÂä†ÁΩëÁªúÂü∫Á°ÄÈÖçÁΩÆ --------------------
add_network_base_configs() {
    log_step "Ê∑ªÂä†ÁΩëÁªúÂü∫Á°ÄÈÖçÁΩÆÔºàËß£ÂÜ≥ËÅîÁΩëÈóÆÈ¢òÔºâ"
    
    local added_count=0
    local total_count=${#NETWORK_BASE_CONFIGS[@]}
    
    log_info "ÂáÜÂ§áÊ∑ªÂä† $total_count È°πÁΩëÁªúÂü∫Á°ÄÈÖçÁΩÆ..."
    
    for config in "${NETWORK_BASE_CONFIGS[@]}"; do
        if add_config_if_missing "$config" "ÁΩëÁªúÂü∫Á°ÄÈÖçÁΩÆ"; then
            ((added_count++))
        fi
    done
    
    log_success "ÁΩëÁªúÈÖçÁΩÆÊ∑ªÂä†ÂÆåÊàê: $added_count/$total_count È°π"
    
    if [ $added_count -gt 0 ]; then
        log_info "Êñ∞Ê∑ªÂä†ÁöÑÈÖçÁΩÆÂ∞ÜÂú®‰∏ãÊ¨° make menuconfig Êó∂ÁîüÊïà"
        log_info "Ëøô‰∫õÈÖçÁΩÆ‰∏ªË¶ÅËß£ÂÜ≥ IPQ40xx ËÆæÂ§áÁöÑÁΩëÁªúËøûÊé•ÈóÆÈ¢ò"
    fi
}

# -------------------- È™åËØÅÂèòÈáèÊòØÂê¶‰∏∫ÊúâÊïàÊï∞Â≠ó --------------------
is_number() {
    local var="$1"
    [[ "$var" =~ ^[0-9]+$ ]]
}

# -------------------- ÂÆâÂÖ®ÈÄíÂ¢ûÊèí‰ª∂ËÆ°Êï∞ --------------------
increment_plugin_count() {
    if ! is_number "$plugin_count"; then
        log_error "plugin_count ‰∏çÊòØÊúâÊïàÊï∞Â≠óÔºàÂΩìÂâçÂÄº: '$plugin_count'ÔºâÔºåÂ∞ÜÈáçÁΩÆ‰∏∫0"
        plugin_count=0
    fi
    
    local new_count=$((plugin_count + 1))
    log_debug "plugin_count ‰ªé $plugin_count ÈÄíÂ¢ûÂà∞ $new_count"
    plugin_count="$new_count"
}

# -------------------- ÈïúÂÉè‰ªìÂ∫ìÊîØÊåÅ --------------------
try_git_mirrors() {
    local original_repo="$1"
    local temp_dir="$2"
    local mirrors=(
        "$original_repo"                                    # ÂéüÂßãÂú∞ÂùÄ
        "${original_repo/github.com/ghproxy.com\/github.com}"  # GitHub‰ª£ÁêÜ
        "${original_repo/github.com/hub.fastgit.xyz}"     # FastGitÈïúÂÉè
        "${original_repo/github.com/gitclone.com\/github.com}" # GitCloneÈïúÂÉè
    )
    
    for mirror in "${mirrors[@]}"; do
        log_info "Â∞ùËØïÈïúÂÉè: $mirror"
        
        # ÊµãËØïËøûÊé•ÊÄß
        if timeout 10 git ls-remote --heads "$mirror" >/dev/null 2>&1; then
            log_info "ËøûÊé•ÊµãËØïÊàêÂäüÔºåÂºÄÂßãÂÖãÈöÜ..."
            
            if timeout 300 git clone --depth 1 --single-branch \
                --progress "$mirror" "$temp_dir" 2>&1; then
                
                if [ -d "$temp_dir" ] && [ "$(ls -A "$temp_dir" 2>/dev/null)" != "" ]; then
                    log_success "ÂÖãÈöÜÊàêÂäüÔºÅ‰ΩøÁî®ÈïúÂÉè: $mirror"
                    return 0
                fi
            fi
        fi
        
        log_warning "ÈïúÂÉèÂ§±Ë¥•: $mirror"
        [ -d "$temp_dir" ] && rm -rf "$temp_dir"
    done
    
    return 1
}

# -------------------- Â¢ûÂº∫ÁöÑÊèí‰ª∂ÈõÜÊàêÂáΩÊï∞ --------------------
fetch_plugin() {
    local repo="$1"
    local plugin_name="$2"
    local subdir="${3:-.}"
    shift 3
    local deps=("$@")
    
    local temp_dir="/tmp/${plugin_name}_$(date +%s)_$$"
    local success=0
    
    log_step "ÂºÄÂßãÈõÜÊàêÊèí‰ª∂: $plugin_name"
    log_info "‰ªìÂ∫ìÂú∞ÂùÄ: $repo"
    log_info "ÁõÆÊ†áË∑ØÂæÑ: package/$plugin_name"
    
    # ÈîÅÊñá‰ª∂Â§ÑÁêÜ
    local lock_file="/tmp/.${plugin_name}_lock"
    exec 200>"$lock_file"
    if ! flock -n 200; then
        log_warning "Êèí‰ª∂ $plugin_name Ê≠£Âú®Ë¢´Â§ÑÁêÜÔºåÁ≠âÂæÖÈîÅÈáäÊîæ..."
        flock 200
    fi
    
    # Ê∏ÖÁêÜÊóßÁâàÊú¨
    log_info "Ê∏ÖÁêÜÊóßÁâà $plugin_name Áõ∏ÂÖ≥Êñá‰ª∂..."
    local cleanup_paths=(
        "feeds/luci/applications/$plugin_name"
        "feeds/packages/net/$plugin_name"
        "package/$plugin_name"
        "$CUSTOM_PLUGINS_DIR/$plugin_name"
        "$temp_dir"
    )
    for path in "${cleanup_paths[@]}"; do
        if [ -d "$path" ]; then
            log_info "Âà†Èô§ÊóßË∑ØÂæÑ: $path"
            rm -rf "$path" || log_warning "Êó†Ê≥ïÂà†Èô§ $path"
        fi
    done
    
    # ‰ΩøÁî®ÈïúÂÉèÂÖãÈöÜ
    log_info "ÂºÄÂßãÂ§öÈïúÂÉèÂÖãÈöÜÂ∞ùËØï..."
    if try_git_mirrors "$repo" "$temp_dir"; then
        success=1
    else
        log_error "ÊâÄÊúâÈïúÂÉèÂùáÂÖãÈöÜÂ§±Ë¥•"
        flock -u 200
        return 1
    fi
    
    # Â§ÑÁêÜÂ≠êÁõÆÂΩï
    local source_path="$temp_dir/$subdir"
    if [ ! -d "$source_path" ]; then
        log_error "Ê∫êÁõÆÂΩï‰∏çÂ≠òÂú®: $source_path"
        log_info "‰∏¥Êó∂ÁõÆÂΩïÁªìÊûÑÔºö"
        ls -la "$temp_dir" 2>/dev/null || true
        rm -rf "$temp_dir"
        flock -u 200
        return 1
    fi
    
    # È™åËØÅMakefileÂ≠òÂú®
    if [ ! -f "$source_path/Makefile" ]; then
        log_error "$plugin_name Áº∫Â∞ëÂÖ≥ÈîÆÊñá‰ª∂: Makefile"
        log_info "Âú® $source_path ‰∏≠ÊêúÁ¥¢Makefile..."
        local found_makefile=$(find "$source_path" -maxdepth 3 -name Makefile -print -quit)
        if [ -n "$found_makefile" ]; then
            log_info "ÊâæÂà∞Makefile: $found_makefile"
            source_path=$(dirname "$found_makefile")
        else
            log_error "Êú™ÊâæÂà∞MakefileÔºåÈõÜÊàêÂ§±Ë¥•"
            rm -rf "$temp_dir"
            flock -u 200
            return 1
        fi
    fi
    
    # ÁßªÂä®Êèí‰ª∂Âà∞ÁõÆÊ†áÁõÆÂΩï
    log_info "ÁßªÂä®Êèí‰ª∂Âà∞ package ÁõÆÂΩï..."
    mkdir -p "package"
    if ! mv "$source_path" "package/$plugin_name"; then
        log_error "ÁßªÂä®Â§±Ë¥•ÔºÅ"
        log_info "Ê∫êË∑ØÂæÑ: $source_path"
        log_info "ÁõÆÊ†áË∑ØÂæÑ: package/$plugin_name"
        rm -rf "$temp_dir"
        flock -u 200
        return 1
    fi
    
    # Ê∏ÖÁêÜ‰∏¥Êó∂Êñá‰ª∂
    rm -rf "$temp_dir"
    flock -u 200
    
    # È™åËØÅÈõÜÊàêÁªìÊûú
    if [ -d "package/$plugin_name" ] && [ -f "package/$plugin_name/Makefile" ]; then
        log_success "$plugin_name ÈõÜÊàêÊàêÂäüÔºÅ"
        log_info "ÊúÄÁªàË∑ØÂæÑ: package/$plugin_name"
        
        # Ê∑ªÂä†‰æùËµñÈÖçÁΩÆ
        if [ ${#deps[@]} -gt 0 ]; then
            log_info "Ê∑ªÂä† ${#deps[@]} ‰∏™‰æùËµñÈÖçÁΩÆÈ°π..."
            for dep in "${deps[@]}"; do
                if [ -n "$dep" ]; then
                    add_config_if_missing "$dep" "$plugin_name ‰æùËµñ"
                fi
            done
        fi
        return 0
    else
        log_error "$plugin_name ÈõÜÊàêÈ™åËØÅÂ§±Ë¥•"
        return 1
    fi
}

# -------------------- È™åËØÅÊñá‰ª∂Á≥ªÁªüÂáΩÊï∞ --------------------
verify_filesystem() {
    local plugin=$1
    log_step "È™åËØÅ $plugin Êñá‰ª∂Á≥ªÁªü"
    
    log_debug "ËøõÂÖ• verify_filesystemÔºåÂΩìÂâç plugin_count: '$plugin_count'"
    
    if [ -d "package/$plugin" ]; then
        log_debug "ÁõÆÂΩïÂ≠òÂú®: package/$plugin"
        if [ -f "package/$plugin/Makefile" ]; then
            log_debug "MakefileÂ≠òÂú®: package/$plugin/Makefile"
            log_success "$plugin ÁõÆÂΩïÂíåMakefileÂùáÂ≠òÂú®"
            
            increment_plugin_count
            
            log_debug "È™åËØÅ $plugin ÂêéÔºåplugin_count Â∑≤Êõ¥Êñ∞‰∏∫: $plugin_count"
            return 0
        else
            log_error "$plugin ÁõÆÂΩïÂ≠òÂú®Ôºå‰ΩÜÁº∫Â∞ëMakefile"
            validation_passed=false
        fi
    else
        log_error "$plugin ÁõÆÂΩï‰∏çÂ≠òÂú®ÔºàÈõÜÊàêÂ§±Ë¥•Ôºâ"
        validation_passed=false
    fi
    
    return 0
}

# -------------------- È™åËØÅÈÖçÁΩÆÈ°πÂáΩÊï∞ --------------------
verify_configs() {
    local plugin_name="$1"
    shift
    local deps=("$@")
    local missing=0
    local found=0
    local total=${#deps[@]}

    log_step "È™åËØÅ $plugin_name ÈÖçÁΩÆÈ°πÔºàÂÖ± $total È°πÔºâ"
    
    set +e
    for index in "${!deps[@]}"; do
        local config="${deps[$index]}"
        local item_num=$((index + 1))
        
        log_debug "Â§ÑÁêÜÁ¨¨ $item_num È°π: $config"
        
        if [ -z "$config" ]; then
            log_warning "Á¨¨ $item_num È°πÔºöÈÖçÁΩÆÈ°π‰∏∫Á©∫ÔºåË∑≥Ëøá"
            ((missing++))
            continue
        fi
        
        if [ ! -w "$CONFIG_FILE" ]; then
            log_warning "$CONFIG_FILE ‰∏çÂèØÂÜôÔºåÊó†Ê≥ïÊ∑ªÂä†ÈÖçÁΩÆÈ°π"
        fi
        
        if grep -q "^${config}$" "$CONFIG_FILE" 2>/dev/null; then
            log_info "Á¨¨ $item_num È°π: ‚úÖ $config"
            ((found++))
        else
            log_warning "Á¨¨ $item_num È°π: ‚ùå $configÔºà.config‰∏≠Êú™ÊâæÂà∞Ôºâ"
            ((missing++))
        fi
    done
    set -e
    
    log_info "$plugin_name ÈÖçÁΩÆÈ°πÈ™åËØÅÊ±áÊÄªÔºö"
    log_info "  ÊÄªÊï∞Èáè: $total"
    log_info "  ÊâæÂà∞: $found"
    log_info "  Áº∫Â§±: $missing"
    
    if [ $missing -eq 0 ]; then
        log_success "$plugin_name ÈÖçÁΩÆÈ°πÂÖ®ÈÉ®È™åËØÅÈÄöËøá"
    else
        log_warning "$plugin_name Â≠òÂú® $missing ‰∏™Áº∫Â§±ÈÖçÁΩÆÈ°π"
        validation_passed=false
    fi
}

# -------------------- Ê£ÄÊü•ÈÖçÁΩÆÊñá‰ª∂ÊúâÊïàÊÄß --------------------
check_config_file() {
    log_step "Ê£ÄÊü•ÈÖçÁΩÆÊñá‰ª∂"
    log_info "ÁõÆÊ†áÊñá‰ª∂: $CONFIG_FILE"
    
    if [ ! -f "$CONFIG_FILE" ]; then
        log_warning "ÈÖçÁΩÆÊñá‰ª∂‰∏çÂ≠òÂú®ÔºåÂàõÂª∫Á©∫Êñá‰ª∂..."
        touch "$CONFIG_FILE" || { log_error "Êó†Ê≥ïÂàõÂª∫ $CONFIG_FILE"; return 1; }
    fi
    
    if [ ! -r "$CONFIG_FILE" ]; then
        log_error "ÈÖçÁΩÆÊñá‰ª∂‰∏çÂèØËØªÂèñÔºàÊùÉÈôêÈóÆÈ¢òÔºâ"
        return 1
    fi
    
    if [ ! -w "$CONFIG_FILE" ]; then
        log_warning "ÈÖçÁΩÆÊñá‰ª∂‰∏çÂèØÂÜôÔºåÂêéÁª≠ÂèØËÉΩÊó†Ê≥ïÊ∑ªÂä†‰æùËµñÈ°π"
    fi
    
    if [ -z "$(cat "$CONFIG_FILE" 2>/dev/null)" ]; then
        log_warning "ÈÖçÁΩÆÊñá‰ª∂‰∏∫Á©∫ÔºåÂèØËÉΩÈúÄË¶ÅÊâãÂä®ÈÖçÁΩÆ"
    else
        log_success "ÈÖçÁΩÆÊñá‰ª∂ÊúâÊïàÔºàË°åÊï∞: $(wc -l < "$CONFIG_FILE")Ôºâ"
    fi
    return 0
}

# -------------------- Êèí‰ª∂‰æùËµñÈÖçÁΩÆ --------------------
OPENCLASH_DEPS=(
    "CONFIG_PACKAGE_luci-app-openclash=y"
    "CONFIG_PACKAGE_iptables-mod-tproxy=y"
    "CONFIG_PACKAGE_kmod-tun=y"
    "CONFIG_PACKAGE_dnsmasq-full=y"
    "CONFIG_PACKAGE_coreutils-nohup=y"
    "CONFIG_PACKAGE_bash=y"
    "CONFIG_PACKAGE_curl=y"
    "CONFIG_PACKAGE_jsonfilter=y"
    "CONFIG_PACKAGE_ca-certificates=y"
    "CONFIG_PACKAGE_iptables-mod-socket=y"
    "CONFIG_PACKAGE_iptables-mod-conntrack-extra=y"
    "CONFIG_PACKAGE_ipset=y"
    "CONFIG_PACKAGE_ip-full=y"
    "CONFIG_PACKAGE_iptables-mod-extra=y"
    "CONFIG_PACKAGE_ruby=y"
    "CONFIG_PACKAGE_ruby-yaml=y"
    "CONFIG_PACKAGE_unzip=y"
    "CONFIG_PACKAGE_luci-compat=y"
    "CONFIG_PACKAGE_luci-base=y"
    "CONFIG_PACKAGE_kmod-inet-diag=y"
)

PASSWALL2_DEPS=(
    "CONFIG_PACKAGE_luci-app-passwall2=y"
    "CONFIG_PACKAGE_xray-core=y"
    "CONFIG_PACKAGE_sing-box=y"
    "CONFIG_PACKAGE_chinadns-ng=y"
    "CONFIG_PACKAGE_haproxy=y"
    "CONFIG_PACKAGE_hysteria=y"
    "CONFIG_PACKAGE_v2ray-geoip=y"
    "CONFIG_PACKAGE_v2ray-geosite=y"
    "CONFIG_PACKAGE_unzip=y"
    "CONFIG_PACKAGE_iptables=y"
    "CONFIG_PACKAGE_iptables-mod-tproxy=y"
    "CONFIG_PACKAGE_iptables-mod-socket=y"
    "CONFIG_PACKAGE_kmod-ipt-nat=y"
    "CONFIG_PACKAGE_coreutils=y"
    "CONFIG_PACKAGE_coreutils-base64=y"
    "CONFIG_PACKAGE_coreutils-nohup=y"
    "CONFIG_PACKAGE_curl=y"
    "CONFIG_PACKAGE_ipset=y"
    "CONFIG_PACKAGE_ip-full=y"
    "CONFIG_PACKAGE_luci-compat=y"
    "CONFIG_PACKAGE_luci-lib-jsonc=y"
    "CONFIG_PACKAGE_tcping=y"
    "CONFIG_PACKAGE_dns2socks=y"
    "CONFIG_PACKAGE_ipt2socks=y"
    "CONFIG_PACKAGE_microsocks=y"
)

# -------------------- Ê≥®ÈáäÊèí‰ª∂ÂáΩÊï∞ --------------------
comment_config_if_exists() {
    local config_name="$1"
    if grep -q "^CONFIG_PACKAGE_${config_name}=" "$CONFIG_FILE"; then
        sed -i "s/^CONFIG_PACKAGE_${config_name}=.*/# CONFIG_PACKAGE_${config_name} is not set/" "$CONFIG_FILE"
        log_success "Â∑≤Ê≥®ÈáäÊéâÊèí‰ª∂: $config_name"
    else
        log_info "ÈÖçÁΩÆ $config_name ‰∏çÂ≠òÂú®ÔºåË∑≥ËøáÊ≥®Èáä"
    fi
}

# -------------------- ‰∏ªÊµÅÁ®ã --------------------
main() {
    log_step "ÂºÄÂßãOpenWrtÊèí‰ª∂ÈõÜÊàê‰∏éÈ™åËØÅÊµÅÁ®ã"
    
    # Ë∞ÉËØïÔºöÈ™åËØÅÂàùÂßã plugin_count
    log_debug "‰∏ªÊµÅÁ®ãÂºÄÂßãÔºåÂàùÂßã plugin_count: '$plugin_count'ÔºàÁ±ªÂûã: $(declare -p plugin_count 2>/dev/null)Ôºâ"
    
    # ÂêØÁî®Ë∞ÉËØïËæìÂá∫
    if [ "$DEBUG_MODE" = "true" ]; then
        log_info "ÂêØÁî®Ë∞ÉËØïÊ®°ÂºèÔºåÂ∞ÜËæìÂá∫ËØ¶ÁªÜÂëΩ‰ª§ÊâßË°åÊó•Âøó"
        set -x
    fi
    
    # Ê£ÄÊü•Âü∫Á°ÄÁéØÂ¢É
    check_config_file || log_warning "ÈÖçÁΩÆÊñá‰ª∂Ê£ÄÊü•ÊúâÈóÆÈ¢òÔºåÁªßÁª≠ÊâßË°å..."
    
    # -------------------- Ê≥®ÈáäÊéâ‰∏çÈúÄË¶ÅÁöÑÊèí‰ª∂ --------------------
    log_step "Ê≥®ÈáäÊéâ‰∏çÈúÄË¶ÅÁöÑÊèí‰ª∂"
    comment_config_if_exists "luci-app-kms"

    # ËøôÈáåÁªßÁª≠ DTS ÈÖçÁΩÆÂíåÊèí‰ª∂ÈõÜÊàê...
	
    # DTSËÆæÂ§áÊ†ëÈÖçÁΩÆ
    log_step "ÈÖçÁΩÆDTSËÆæÂ§áÊ†ëÊîØÊåÅ"
    if setup_device_tree; then
        log_success "DTSËÆæÂ§áÊ†ëÈÖçÁΩÆÂÆåÊàê"
    else
        log_error "DTSËÆæÂ§áÊ†ëÈÖçÁΩÆÂ§±Ë¥•"
        validation_passed=false
    fi
    
    # Ê∑ªÂä†ÁΩëÁªúÂü∫Á°ÄÈÖçÁΩÆ
    add_network_base_configs
    
    # ÂàõÂª∫ÂøÖË¶ÅÁõÆÂΩï
    log_step "ÂàõÂª∫ÂøÖË¶ÅÁõÆÂΩï"
    mkdir -p "$CUSTOM_PLUGINS_DIR" "package"
    log_debug "ÂàõÂª∫ÁõÆÂΩï: $CUSTOM_PLUGINS_DIR Âíå package"
    
    # ÈõÜÊàêÊèí‰ª∂
    log_step "ÂºÄÂßãÈõÜÊàêÊèí‰ª∂"
    
    log_step "ÈõÜÊàê OpenClash"
    if fetch_plugin "https://github.com/vernesong/OpenClash.git" \
        "luci-app-openclash" "luci-app-openclash" "${OPENCLASH_DEPS[@]}"; then
        log_success "OpenClash ÈõÜÊàêÊµÅÁ®ãÂÆåÊàê"
    else
        log_error "OpenClash ÈõÜÊàêÂ§±Ë¥•ÔºåÂ∞ÜË∑≥ËøáÂÖ∂È™åËØÅÊ≠•È™§"
    fi
    
    log_step "ÈõÜÊàê Passwall2"
    if fetch_plugin "https://github.com/xiaorouji/openwrt-passwall2.git" \
        "luci-app-passwall2" "." "${PASSWALL2_DEPS[@]}"; then
        log_success "Passwall2 ÈõÜÊàêÊµÅÁ®ãÂÆåÊàê"
    else
        log_error "Passwall2 ÈõÜÊàêÂ§±Ë¥•ÔºåÂ∞ÜË∑≥ËøáÂÖ∂È™åËØÅÊ≠•È™§"
    fi
    
    # È™åËØÅÊèí‰ª∂Êñá‰ª∂Á≥ªÁªüÔºàÂÖ≥ÈîÆÊ≠•È™§Ôºå‰ΩøÁî®ÂÆâÂÖ®ÈÄíÂ¢ûÔºâ
    log_step "ÂºÄÂßãÊñá‰ª∂Á≥ªÁªüÈ™åËØÅ"
    verify_filesystem "luci-app-openclash"
    log_debug "OpenClash Êñá‰ª∂Á≥ªÁªüÈ™åËØÅÂêéÔºåplugin_count: $plugin_count"
    
    verify_filesystem "luci-app-passwall2"
    log_debug "Passwall2 Êñá‰ª∂Á≥ªÁªüÈ™åËØÅÂêéÔºåplugin_count: $plugin_count"
    
    # È™åËØÅÈÖçÁΩÆÈ°π
    log_step "ÂºÄÂßãÈÖçÁΩÆÈ°πÈ™åËØÅ"
    if [ -d "package/luci-app-openclash" ]; then
        log_debug "ÂºÄÂßãÈ™åËØÅ OpenClash ÈÖçÁΩÆÈ°πÔºåÂÖ± ${#OPENCLASH_DEPS[@]} È°π"
        verify_configs "OpenClash" "${OPENCLASH_DEPS[@]}"
        log_debug "OpenClash ÈÖçÁΩÆÈ°πÈ™åËØÅÂÆåÊàê"
    else
        log_info "OpenClash Êú™ÈõÜÊàêÔºåË∑≥ËøáÈÖçÁΩÆÈ°πÈ™åËØÅ"
    fi
    
    if [ -d "package/luci-app-passwall2" ]; then
        log_debug "ÂºÄÂßãÈ™åËØÅ Passwall2 ÈÖçÁΩÆÈ°πÔºåÂÖ± ${#PASSWALL2_DEPS[@]} È°π"
        verify_configs "Passwall2" "${PASSWALL2_DEPS[@]}"
        log_debug "Passwall2 ÈÖçÁΩÆÈ°πÈ™åËØÅÂÆåÊàê"
    else
        log_info "Passwall2 Êú™ÈõÜÊàêÔºåË∑≥ËøáÈÖçÁΩÆÈ°πÈ™åËØÅ"
    fi
    
    # ÊúÄÁªàÊä•Âëä
    log_step "ÊµÅÁ®ãÊâßË°åÂÆåÊàêÔºåÁîüÊàêÊä•Âëä"
    log_debug "ÊúÄÁªà plugin_count: $plugin_countÔºàÁ±ªÂûã: $(declare -p plugin_count 2>/dev/null)Ôºâ"
    
    if $validation_passed && [ $plugin_count -gt 0 ]; then
        log_success "üéâ ÊâÄÊúâÈ™åËØÅÈÄöËøáÔºÅÊàêÂäüÈõÜÊàê $plugin_count ‰∏™Êèí‰ª∂"
        log_info "DTSÈÖçÁΩÆ„ÄÅÁΩëÁªúÂü∫Á°ÄÂíåÊèí‰ª∂Â∑≤Â∞±Áª™"
        log_info "Âª∫ËÆÆÊâßË°å: make defconfig && make menuconfig Á°ÆËÆ§ÈÖçÁΩÆÔºåÁÑ∂Âêé make -j\$(nproc) V=s ÁºñËØë"
        exit 0
    elif [ $plugin_count -gt 0 ]; then
        log_warning "‚ö†Ô∏è  ÈÉ®ÂàÜÈ™åËØÅÊú™ÈÄöËøáÔºå‰ΩÜÊàêÂäüÈõÜÊàê $plugin_count ‰∏™Êèí‰ª∂"
        log_info "ÂèØ‰ª•Â∞ùËØïÁªßÁª≠ÁºñËØëÔºåÊàñÊ†πÊçÆË≠¶Âëä‰øÆÂ§çÈóÆÈ¢ò"
        exit 0
    else
        log_error "‚ùå ÊâÄÊúâÊèí‰ª∂ÈõÜÊàêÂ§±Ë¥•"
        log_info "‰øÆÂ§çÂª∫ËÆÆÔºö"
        log_info "1. Ê£ÄÊü•ÁΩëÁªúËøûÊé•ÔºàÂ∞§ÂÖ∂ÊòØGitHubËÆøÈóÆÔºâ"
        log_info "2. Á°ÆËÆ§Êèí‰ª∂‰ªìÂ∫ìÂú∞ÂùÄÊ≠£Á°Æ"
        log_info "3. Ê£ÄÊü•Áî®Êà∑ÊùÉÈôêÔºàÊòØÂê¶ÊúâÊùÉÈôêÊìç‰ΩúÊñá‰ª∂Ôºâ"
        log_info "4. Ê∏ÖÁêÜÂêéÈáçËØïÔºörm -rf package/luci-app-* target/linux/ipq40xx/files/arch/arm/boot/dts/qcom-ipq4019-cm520-79f.dts && ./ËÑöÊú¨Âêç"
        exit 1
    fi
}

# ÂêØÂä®‰∏ªÊµÅÁ®ã
main
