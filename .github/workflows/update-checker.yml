name: Update Checker
env:
  REPO_URL: https://github.com/immortalwrt/immortalwrt
  REPO_BRANCH: master
  TARGET_REPO: fgbfg5676/immortalwrt   # 🔴 指向你的 fork 仓库
  UPSTREAM_REPO: immortalwrt/immortalwrt
on:
  workflow_dispatch:
  schedule:
    - cron: '0 */18 * * *'   # 每18小时检查一次更新
jobs:
  check:
    runs-on: ubuntu-latest
    steps:
    - name: Get Upstream Commit Hash
      id: getHash
      run: |
        # 使用 ls-remote 获取最新提交哈希，无需克隆整个仓库
        echo "commitHash=$(git ls-remote $REPO_URL refs/heads/$REPO_BRANCH | cut -f1)" >> $GITHUB_OUTPUT
        echo "Current upstream commit: $commitHash"
    
    - name: Check for New Commits
      id: checkCommits
      uses: actions/cache@v3
      with:
        path: .commitHash
        key: upstream-commit-${{ steps.getHash.outputs.commitHash }}
        restore-keys: |
          upstream-commit-
    
    - name: Save New Commit Hash
      if: steps.checkCommits.outputs.cache-hit != 'true'
      run: |
        echo "${{ steps.getHash.outputs.commitHash }}" > .commitHash
        echo "New commit detected: ${{ steps.getHash.outputs.commitHash }}"
    
    - name: Trigger Build Workflow
      if: steps.checkCommits.outputs.cache-hit != 'true'
      uses: peter-evans/repository-dispatch@v3
      with:
        token: ${{ secrets.TARGET_REPO_PAT }}          # 🔴 你的 PAT
        repository: ${{ env.TARGET_REPO }}             # 🔴 你的 fork
        event-type: "Source Code Update"
        client-payload: |
          {
            "upstream_repo": "${{ env.UPSTREAM_REPO }}",
            "upstream_branch": "${{ env.REPO_BRANCH }}",
            "commit_hash": "${{ steps.getHash.outputs.commitHash }}"
          }
    
    - name: Cleanup Old Workflow Runs
      uses: Mattraks/delete-workflow-runs@v2
      with:
        retain_days: 1
        keep_minimum_runs: 3
    
    - name: Notify Update Status
      if: always()
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        fields: repo,message,commit,author,action,eventName,ref,workflow
        text: |
          Update check ${{ job.status }}
          ${{ steps.checkCommits.outputs.cache-hit != 'true' && 'New update found and build triggered!' || 'No new updates found.' }}
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
